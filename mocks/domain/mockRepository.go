// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dbielecki97/url-shortener/internal/domain (interfaces: ShortUrlRepo)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	domain "github.com/dbielecki97/url-shortener/internal/domain"
	errs "github.com/dbielecki97/url-shortener/pkg/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockShortUrlRepo is a mock of ShortUrlRepo interface.
type MockShortUrlRepo struct {
	ctrl     *gomock.Controller
	recorder *MockShortUrlRepoMockRecorder
}

// MockShortUrlRepoMockRecorder is the mock recorder for MockShortUrlRepo.
type MockShortUrlRepoMockRecorder struct {
	mock *MockShortUrlRepo
}

// NewMockShortUrlRepo creates a new mock instance.
func NewMockShortUrlRepo(ctrl *gomock.Controller) *MockShortUrlRepo {
	mock := &MockShortUrlRepo{ctrl: ctrl}
	mock.recorder = &MockShortUrlRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortUrlRepo) EXPECT() *MockShortUrlRepoMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockShortUrlRepo) Find(arg0 string) (*domain.ShortURL, errs.RestErr) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0)
	ret0, _ := ret[0].(*domain.ShortURL)
	ret1, _ := ret[1].(errs.RestErr)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockShortUrlRepoMockRecorder) Find(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockShortUrlRepo)(nil).Find), arg0)
}

// Save mocks base method.
func (m *MockShortUrlRepo) Save(arg0 *domain.ShortURL) (*domain.ShortURL, errs.RestErr) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*domain.ShortURL)
	ret1, _ := ret[1].(errs.RestErr)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockShortUrlRepoMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockShortUrlRepo)(nil).Save), arg0)
}
